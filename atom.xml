<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>唐李锦的空间</title>
  <icon>https://www.tanglijin.top/icon.png</icon>
  
  <link href="https://www.tanglijin.top/atom.xml" rel="self"/>
  
  <link href="https://www.tanglijin.top/"/>
  <updated>2023-12-24T11:35:39.565Z</updated>
  <id>https://www.tanglijin.top/</id>
  
  <author>
    <name>唐李锦</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NPM 镜像切换</title>
    <link href="https://www.tanglijin.top/2023/12/npm-mirror-switching/"/>
    <id>https://www.tanglijin.top/2023/12/npm-mirror-switching/</id>
    <published>2023-12-24T11:25:00.000Z</published>
    <updated>2023-12-24T11:35:39.565Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文介绍 NPM 镜像切换的方法。&lt;/p&gt;</summary>
    
    
    
    
    <category term="NPM" scheme="https://www.tanglijin.top/tags/NPM/"/>
    
  </entry>
  
  <entry>
    <title>NodeJS 版本切换</title>
    <link href="https://www.tanglijin.top/2023/12/node-version-switching/"/>
    <id>https://www.tanglijin.top/2023/12/node-version-switching/</id>
    <published>2023-12-11T11:07:00.000Z</published>
    <updated>2023-12-11T14:28:05.663Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文介绍 Node.js 版本切换方法&lt;/p&gt;</summary>
    
    
    
    
    <category term="Node.js" scheme="https://www.tanglijin.top/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>NPM学习笔记</title>
    <link href="https://www.tanglijin.top/2023/12/npm-learning/"/>
    <id>https://www.tanglijin.top/2023/12/npm-learning/</id>
    <published>2023-12-08T01:07:00.000Z</published>
    <updated>2023-12-25T05:58:12.090Z</updated>
    
    
    <summary type="html">&lt;p&gt;npm 是世界上最大的软件注册表。来自各大洲的开源开发人员都使用 npm 来共享和借用包，许多组织也使用 npm 来管理私有开发。&lt;/p&gt;</summary>
    
    
    
    <category term="NPM学习笔记" scheme="https://www.tanglijin.top/categories/NPM%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="NPM" scheme="https://www.tanglijin.top/tags/NPM/"/>
    
  </entry>
  
  <entry>
    <title>面试题 - 前端 - 算法 - 排序 - 桶排序</title>
    <link href="https://www.tanglijin.top/2023/09/interview-fontend-arithmetic-sort-tongpaixu/"/>
    <id>https://www.tanglijin.top/2023/09/interview-fontend-arithmetic-sort-tongpaixu/</id>
    <published>2023-09-01T06:07:00.000Z</published>
    <updated>2023-09-28T00:35:09.901Z</updated>
    
    
    <summary type="html">&lt;p&gt;桶排序（也被称为箱排序）也是分布式排序算法，它将元素分为不同的桶（较小的数组）， 再使用一个简单的排序算法，例如插入排序（用来排序小数组的不错的算法），来对每个桶进行 排序。然后，它将所有的桶合并为结果数组。&lt;/p&gt;</summary>
    
    
    
    <category term="面试题-前端-算法-排序" scheme="https://www.tanglijin.top/categories/%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%89%8D%E7%AB%AF-%E7%AE%97%E6%B3%95-%E6%8E%92%E5%BA%8F/"/>
    
    
    <category term="面试题" scheme="https://www.tanglijin.top/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    <category term="前端" scheme="https://www.tanglijin.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="算法" scheme="https://www.tanglijin.top/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="排序" scheme="https://www.tanglijin.top/tags/%E6%8E%92%E5%BA%8F/"/>
    
    <category term="桶排序s" scheme="https://www.tanglijin.top/tags/%E6%A1%B6%E6%8E%92%E5%BA%8Fs/"/>
    
  </entry>
  
  <entry>
    <title>面试题 - 前端 - 算法 - 排序 - 计数排序</title>
    <link href="https://www.tanglijin.top/2023/09/interview-fontend-arithmetic-sort-jishupaixu/"/>
    <id>https://www.tanglijin.top/2023/09/interview-fontend-arithmetic-sort-jishupaixu/</id>
    <published>2023-09-01T05:18:00.000Z</published>
    <updated>2023-09-01T05:19:22.096Z</updated>
    
    
    <summary type="html">&lt;p&gt;计数排序使用一个用来存储每个元素在原始 数组中出现次数的临时数组。在所有元素都计数完成后，临时数组已排好序并可迭代以构建排序 后的结果数组。&lt;/p&gt;</summary>
    
    
    
    <category term="面试题-前端-算法-排序" scheme="https://www.tanglijin.top/categories/%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%89%8D%E7%AB%AF-%E7%AE%97%E6%B3%95-%E6%8E%92%E5%BA%8F/"/>
    
    
    <category term="面试题" scheme="https://www.tanglijin.top/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    <category term="前端" scheme="https://www.tanglijin.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="算法" scheme="https://www.tanglijin.top/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="排序" scheme="https://www.tanglijin.top/tags/%E6%8E%92%E5%BA%8F/"/>
    
    <category term="计数排序" scheme="https://www.tanglijin.top/tags/%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>面试题 - 前端 - 算法 - 排序 - 快速排序</title>
    <link href="https://www.tanglijin.top/2023/09/interview-fontend-arithmetic-sort-kuaisupaixu/"/>
    <id>https://www.tanglijin.top/2023/09/interview-fontend-arithmetic-sort-kuaisupaixu/</id>
    <published>2023-09-01T05:07:00.000Z</published>
    <updated>2023-09-01T05:08:36.790Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span</summary>
        
      
    
    
    
    <category term="面试题-前端-算法-排序" scheme="https://www.tanglijin.top/categories/%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%89%8D%E7%AB%AF-%E7%AE%97%E6%B3%95-%E6%8E%92%E5%BA%8F/"/>
    
    
    <category term="面试题" scheme="https://www.tanglijin.top/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    <category term="前端" scheme="https://www.tanglijin.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="算法" scheme="https://www.tanglijin.top/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="排序" scheme="https://www.tanglijin.top/tags/%E6%8E%92%E5%BA%8F/"/>
    
    <category term="快速排序" scheme="https://www.tanglijin.top/tags/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>面试题 - 前端 - 算法 - 排序 - 归并排序</title>
    <link href="https://www.tanglijin.top/2023/09/interview-fontend-arithmetic-sort-guibingpaixu/"/>
    <id>https://www.tanglijin.top/2023/09/interview-fontend-arithmetic-sort-guibingpaixu/</id>
    <published>2023-09-01T04:26:00.000Z</published>
    <updated>2023-09-01T04:42:01.645Z</updated>
    
    
    <summary type="html">&lt;p&gt;归并排序是一种分而治之算法。其思想是将原始数组切分成较小的数组，直到每个小数组只 有一个位置，接着将小数组归并成较大的数组，直到最后只有一个排序完毕的大数组。&lt;/p&gt;</summary>
    
    
    
    <category term="面试题-前端-算法-排序" scheme="https://www.tanglijin.top/categories/%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%89%8D%E7%AB%AF-%E7%AE%97%E6%B3%95-%E6%8E%92%E5%BA%8F/"/>
    
    
    <category term="面试题" scheme="https://www.tanglijin.top/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    <category term="前端" scheme="https://www.tanglijin.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="算法" scheme="https://www.tanglijin.top/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="排序" scheme="https://www.tanglijin.top/tags/%E6%8E%92%E5%BA%8F/"/>
    
    <category term="归并排序" scheme="https://www.tanglijin.top/tags/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>面试题 - 前端 - 算法 - 排序 - 插入排序</title>
    <link href="https://www.tanglijin.top/2023/09/interview-fontend-arithmetic-sort-charupaixu/"/>
    <id>https://www.tanglijin.top/2023/09/interview-fontend-arithmetic-sort-charupaixu/</id>
    <published>2023-09-01T03:40:00.000Z</published>
    <updated>2023-09-29T01:22:57.116Z</updated>
    
    
    <summary type="html">&lt;p&gt;插入排序每次排一个数组项，以此方式构建最后的排序数组。&lt;/p&gt;</summary>
    
    
    
    <category term="面试题-前端-算法-排序" scheme="https://www.tanglijin.top/categories/%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%89%8D%E7%AB%AF-%E7%AE%97%E6%B3%95-%E6%8E%92%E5%BA%8F/"/>
    
    
    <category term="面试题" scheme="https://www.tanglijin.top/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    <category term="前端" scheme="https://www.tanglijin.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="算法" scheme="https://www.tanglijin.top/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="排序" scheme="https://www.tanglijin.top/tags/%E6%8E%92%E5%BA%8F/"/>
    
    <category term="插入排序" scheme="https://www.tanglijin.top/tags/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>面试题 - 前端 - 算法 - 排序 - 选择排序</title>
    <link href="https://www.tanglijin.top/2023/09/interview-fontend-arithmetic-sort-xuanzepaixu/"/>
    <id>https://www.tanglijin.top/2023/09/interview-fontend-arithmetic-sort-xuanzepaixu/</id>
    <published>2023-09-01T03:30:00.000Z</published>
    <updated>2023-09-01T03:37:27.352Z</updated>
    
    
    <summary type="html">&lt;p&gt;选择排序算法是一种原址比较排序算法。选择排序大致的思路是找到数据结构中的最小值并 将其放置在第一位，接着找到第二小的值并将其放在第二位，以此类推。&lt;/p&gt;</summary>
    
    
    
    <category term="面试题-前端-算法-排序" scheme="https://www.tanglijin.top/categories/%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%89%8D%E7%AB%AF-%E7%AE%97%E6%B3%95-%E6%8E%92%E5%BA%8F/"/>
    
    
    <category term="面试题" scheme="https://www.tanglijin.top/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    <category term="前端" scheme="https://www.tanglijin.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="算法" scheme="https://www.tanglijin.top/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="排序" scheme="https://www.tanglijin.top/tags/%E6%8E%92%E5%BA%8F/"/>
    
    <category term="选择排序" scheme="https://www.tanglijin.top/tags/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>面试题 - 前端 - 算法 - 排序 - 冒泡排序</title>
    <link href="https://www.tanglijin.top/2023/08/interview-fontend-arithmetic-sort-maopaopaixu/"/>
    <id>https://www.tanglijin.top/2023/08/interview-fontend-arithmetic-sort-maopaopaixu/</id>
    <published>2023-08-19T03:05:00.000Z</published>
    <updated>2023-09-01T03:24:44.611Z</updated>
    
    
    <summary type="html">&lt;p&gt;冒泡排序比较所有相邻的两个项，如果第一个比第二个大，则交换它们。元素项向上移动至 正确的顺序，就好像气泡升至表面一样，冒泡排序因此得名。&lt;/p&gt;</summary>
    
    
    
    <category term="面试题-前端-算法-排序" scheme="https://www.tanglijin.top/categories/%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%89%8D%E7%AB%AF-%E7%AE%97%E6%B3%95-%E6%8E%92%E5%BA%8F/"/>
    
    
    <category term="面试题" scheme="https://www.tanglijin.top/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    <category term="前端" scheme="https://www.tanglijin.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="算法" scheme="https://www.tanglijin.top/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="排序" scheme="https://www.tanglijin.top/tags/%E6%8E%92%E5%BA%8F/"/>
    
    <category term="冒泡排序" scheme="https://www.tanglijin.top/tags/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>面试题 - 前端 - 网络</title>
    <link href="https://www.tanglijin.top/2023/08/interview-fontend-network/"/>
    <id>https://www.tanglijin.top/2023/08/interview-fontend-network/</id>
    <published>2023-08-19T02:51:00.000Z</published>
    <updated>2023-08-19T02:59:05.242Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;url-从输入到渲染页面的全过程&quot;&gt;&lt;a href=&quot;#url-从输入到渲染页面的全过程&quot; class=&quot;headerlink&quot; title=&quot;url 从输入到渲染页面的全过程&quot;&gt;&lt;/a&gt;url 从输入到渲染页面的全过程&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;浏览器构建 HTTP Request 请求， DNS 解析 URL 地址、生成 HTTP 请求报文、构建 TCP 连接、使用 IP 协议选择传输路线&lt;/li&gt;
&lt;li&gt;将请求通过网络传输到服务端 从客户机到服务器需要通过许多网络设备，一般包括集线器、交换器、路由器等&lt;/li&gt;
&lt;li&gt;服务器构建 HTTP Response 响应，响应客户端的请求&lt;/li&gt;
&lt;li&gt;将响应体的数据通过网络传输返回给客户端&lt;/li&gt;
&lt;li&gt;浏览器渲染页面 解析 HTML、CSS、JS，生成 RenderTree 渲染页面&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="面试题-前端" scheme="https://www.tanglijin.top/categories/%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="面试题" scheme="https://www.tanglijin.top/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    <category term="前端" scheme="https://www.tanglijin.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="网络" scheme="https://www.tanglijin.top/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>面试题 - 前端 - 微信小程序</title>
    <link href="https://www.tanglijin.top/2023/08/interview-fontend-miniprogram/"/>
    <id>https://www.tanglijin.top/2023/08/interview-fontend-miniprogram/</id>
    <published>2023-08-04T01:08:00.000Z</published>
    <updated>2023-08-19T02:39:15.528Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;简述微信小程序原理&quot;&gt;&lt;a href=&quot;#简述微信小程序原理&quot; class=&quot;headerlink&quot; title=&quot;简述微信小程序原理&quot;&gt;&lt;/a&gt;简述微信小程序原理&lt;/h2&gt;&lt;p&gt;微信小程序采用 &lt;code&gt;JavaScript&lt;/code&gt;、&lt;code&gt;WXML&lt;/code&gt;、&lt;code&gt;WXSS&lt;/code&gt; 三种技术进行开发,本质就是一个单页面应用，所有的页面渲染和事件处理，都在一个页面内进行，但又可以通过微信客户端调用原生的各种接口微信的架构，是数据驱动的架构模式，它的 &lt;code&gt;UI&lt;/code&gt; 和数据是分离的，所有的页面更新，都需要通过对数据的更改来实现 小程序分为两个部分 &lt;code&gt;webview&lt;/code&gt; 和 &lt;code&gt;appService&lt;/code&gt; 。其中 &lt;code&gt;webview&lt;/code&gt; 主要用来展现 &lt;code&gt;UI&lt;/code&gt; ，&lt;code&gt;appService&lt;/code&gt; 有来处理业务逻辑、数据及接口调用。它们在两个进程中运行，通过系统层 &lt;code&gt;JSBridge&lt;/code&gt; 实现通信，实现 &lt;code&gt;UI&lt;/code&gt; 的渲染、事件的处理&lt;/p&gt;</summary>
    
    
    
    <category term="面试题-前端" scheme="https://www.tanglijin.top/categories/%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="面试题" scheme="https://www.tanglijin.top/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    <category term="前端" scheme="https://www.tanglijin.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="微信小程序" scheme="https://www.tanglijin.top/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>面试题 - 前端 - Vue</title>
    <link href="https://www.tanglijin.top/2023/08/interview-fontend-vue/"/>
    <id>https://www.tanglijin.top/2023/08/interview-fontend-vue/</id>
    <published>2023-08-03T06:00:00.000Z</published>
    <updated>2023-08-03T09:52:16.980Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;解释单向数据流和双向数据绑定&quot;&gt;&lt;a href=&quot;#解释单向数据流和双向数据绑定&quot; class=&quot;headerlink&quot; title=&quot;解释单向数据流和双向数据绑定&quot;&gt;&lt;/a&gt;解释单向数据流和双向数据绑定&lt;/h2&gt;&lt;p&gt;对于 Vue 来说，组件之间的数据传递具有单向数据流这样的特性称为单向数据流，单向数据流（Unidirectional data flow）方式使用一个上传数据流和一个下传数据流进行双向数据通信，两个数据流之间相互独立，单向数据流指只能从一个方向来修改状态。&lt;/p&gt;</summary>
    
    
    
    <category term="面试题-前端" scheme="https://www.tanglijin.top/categories/%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="面试题" scheme="https://www.tanglijin.top/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    <category term="前端" scheme="https://www.tanglijin.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue" scheme="https://www.tanglijin.top/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>面试题 - 前端 - Node.js</title>
    <link href="https://www.tanglijin.top/2023/08/interview-fontend-nodejs/"/>
    <id>https://www.tanglijin.top/2023/08/interview-fontend-nodejs/</id>
    <published>2023-08-03T03:19:00.000Z</published>
    <updated>2023-12-11T11:10:39.230Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;nodejs-创建静态服务器&quot;&gt;&lt;a href=&quot;#nodejs-创建静态服务器&quot; class=&quot;headerlink&quot; title=&quot;nodejs 创建静态服务器&quot;&gt;&lt;/a&gt;nodejs 创建静态服务器&lt;/h2&gt;&lt;p&gt;要使用 HTTP 服务器和客户端，则必须 &lt;code&gt;require(&amp;#39;http&amp;#39;)&lt;/code&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="面试题-前端" scheme="https://www.tanglijin.top/categories/%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Node.js" scheme="https://www.tanglijin.top/tags/Node-js/"/>
    
    <category term="面试题" scheme="https://www.tanglijin.top/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    <category term="前端" scheme="https://www.tanglijin.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>面试题 - 前端 - 工程化&amp;代码管理</title>
    <link href="https://www.tanglijin.top/2023/08/interview-fontend-project/"/>
    <id>https://www.tanglijin.top/2023/08/interview-fontend-project/</id>
    <published>2023-08-02T04:39:00.000Z</published>
    <updated>2023-08-03T03:15:37.664Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;git-常用命令&quot;&gt;&lt;a href=&quot;#git-常用命令&quot; class=&quot;headerlink&quot; title=&quot;git 常用命令&quot;&gt;&lt;/a&gt;git 常用命令&lt;/h2&gt;&lt;p&gt;git init 初始化仓库&lt;/p&gt;
&lt;p&gt;git status 查看当前各个区域的代码状态。&lt;/p&gt;
&lt;p&gt;git log 查看 commit 记录&lt;/p&gt;</summary>
    
    
    
    <category term="面试题-前端" scheme="https://www.tanglijin.top/categories/%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="面试题" scheme="https://www.tanglijin.top/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    <category term="前端" scheme="https://www.tanglijin.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="工程化" scheme="https://www.tanglijin.top/tags/%E5%B7%A5%E7%A8%8B%E5%8C%96/"/>
    
    <category term="代码管理" scheme="https://www.tanglijin.top/tags/%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>面试题 - 前端 - ES6-ES13</title>
    <link href="https://www.tanglijin.top/2023/07/interview-fontend-es6/"/>
    <id>https://www.tanglijin.top/2023/07/interview-fontend-es6/</id>
    <published>2023-07-11T15:20:00.000Z</published>
    <updated>2023-08-02T04:36:59.239Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;ER6-新增方法&quot;&gt;&lt;a href=&quot;#ER6-新增方法&quot; class=&quot;headerlink&quot; title=&quot;ER6 新增方法&quot;&gt;&lt;/a&gt;ER6 新增方法&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;let 和 const，解构赋值、模板字符串、箭头函数。&lt;/li&gt;
&lt;li&gt;Symbol、Map、Set 三种常用的数据类型。&lt;/li&gt;
&lt;li&gt;Proxy 重新定义了数据劫持的能力. （相对于 Object.defineProperty, Proxy 更多功能，例如可以劫持数组）。&lt;/li&gt;
&lt;li&gt;Reflect 定义了一套标准化的数据操作的方式。&lt;/li&gt;
&lt;li&gt;Promise 确实的解决了异步逻辑嵌套及回调地狱问题。定义了异步逻辑的三种状态 pending、rejected、fullfilled, 搭配 then、catch、all、race 等方法以及 async await 语法糖，大量简化了异步操作。&lt;/li&gt;
&lt;li&gt;Generator 函数，可以将异步逻辑划片执行(async&amp;#x2F;await 是它的语法糖)。&lt;/li&gt;
&lt;li&gt;新增了 class 类的概念&lt;/li&gt;
&lt;li&gt;ES6 Modules</summary>
    
    
    
    <category term="面试题-前端" scheme="https://www.tanglijin.top/categories/%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="面试题" scheme="https://www.tanglijin.top/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    <category term="前端" scheme="https://www.tanglijin.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="ES6" scheme="https://www.tanglijin.top/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>面试题 - 前端 - JS</title>
    <link href="https://www.tanglijin.top/2023/06/interview-fontend-js/"/>
    <id>https://www.tanglijin.top/2023/06/interview-fontend-js/</id>
    <published>2023-06-30T02:51:00.000Z</published>
    <updated>2023-07-11T15:26:03.764Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;介绍-JS-有哪些内置对象？&quot;&gt;&lt;a href=&quot;#介绍-JS-有哪些内置对象？&quot; class=&quot;headerlink&quot; title=&quot;介绍 JS 有哪些内置对象？&quot;&gt;&lt;/a&gt;介绍 JS 有哪些内置对象？&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;数据封装类对象(可以 new 的)：Object、Array、Boolean、Number、String&lt;/li&gt;
&lt;li&gt;其他对象：Function、Arguments、Math、Date、RegExp、Error&lt;/li&gt;
&lt;li&gt;ES6 新增对象：Symbol（标识唯一性的 ID）、Map、Set、Promises、Proxy、Reflect</summary>
    
    
    
    <category term="面试题-前端" scheme="https://www.tanglijin.top/categories/%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="面试题" scheme="https://www.tanglijin.top/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    <category term="前端" scheme="https://www.tanglijin.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JS" scheme="https://www.tanglijin.top/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>面试题 - 前端 - CSS</title>
    <link href="https://www.tanglijin.top/2023/06/interview-fontend-css/"/>
    <id>https://www.tanglijin.top/2023/06/interview-fontend-css/</id>
    <published>2023-06-25T10:32:00.000Z</published>
    <updated>2023-06-30T02:47:16.189Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;display-none-与-visibility-hidden-的区别&quot;&gt;&lt;a href=&quot;#display-none-与-visibility-hidden-的区别&quot; class=&quot;headerlink&quot; title=&quot;display: none; 与 visibility: hidden; 的区别 ?&quot;&gt;&lt;/a&gt;display: none; 与 visibility: hidden; 的区别 ?&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;联系：它们都能让元素不可见&lt;/li&gt;
&lt;li&gt;区别：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;display:none&lt;/code&gt;;会让元素完全从渲染树中消失，渲染的时候不占据任何空间；&lt;code&gt;visibility: hidden&lt;/code&gt;;不会让元素从渲染树消失，渲染师元素继续占据空间，只是内容不可见&lt;/li&gt;
&lt;li&gt;修改常规流中元素的&lt;code&gt;display&lt;/code&gt;通常会造成文档重排。修改&lt;code&gt;visibility&lt;/code&gt;属性只会造成本元素的重绘&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="面试题-前端" scheme="https://www.tanglijin.top/categories/%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="面试题" scheme="https://www.tanglijin.top/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    <category term="前端" scheme="https://www.tanglijin.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="CSS" scheme="https://www.tanglijin.top/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>面试题 - 前端 - HTML5</title>
    <link href="https://www.tanglijin.top/2023/06/interview-fontend-html5/"/>
    <id>https://www.tanglijin.top/2023/06/interview-fontend-html5/</id>
    <published>2023-06-25T08:58:00.000Z</published>
    <updated>2023-06-25T10:32:17.343Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;HTML5-有哪些新特性？&quot;&gt;&lt;a href=&quot;#HTML5-有哪些新特性？&quot; class=&quot;headerlink&quot; title=&quot;HTML5 有哪些新特性？&quot;&gt;&lt;/a&gt;HTML5 有哪些新特性？&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;增强多媒体功能：video,audio 元素。&lt;/li&gt;
&lt;li&gt;新增本地存储：localStorage, SessionStorage。&lt;/li&gt;
&lt;li&gt;语义化标签：header,article,footer 等。**&lt;em&gt;伴随提问：&lt;/em&gt;**&lt;a href=&quot;#%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3HTML5%E7%BB%93%E6%9E%84%E8%AF%AD%E4%B9%89%E5%8C%96%EF%BC%9F&quot;&gt;如何理解 HTML5 结构语义化？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;新增表单控件：date, time, email 等。写法是 &lt;code&gt;&amp;lt;input type=&amp;quot;date&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;新增位置，多任务等功能：GeoLocation，webWorker。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;如何理解-HTML5-结构语义化？&quot;&gt;&lt;a href=&quot;#如何理解-HTML5-结构语义化？&quot; class=&quot;headerlink&quot; title=&quot;如何理解 HTML5 结构语义化？&quot;&gt;&lt;/a&gt;如何理解 HTML5 结构语义化？&lt;/h2&gt;</summary>
    
    
    
    <category term="面试题-前端" scheme="https://www.tanglijin.top/categories/%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="面试题" scheme="https://www.tanglijin.top/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    <category term="前端" scheme="https://www.tanglijin.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="HTML5" scheme="https://www.tanglijin.top/tags/HTML5/"/>
    
  </entry>
  
  <entry>
    <title>Docker 学习 11. 多级构建</title>
    <link href="https://www.tanglijin.top/2023/06/docker-study-11/"/>
    <id>https://www.tanglijin.top/2023/06/docker-study-11/</id>
    <published>2023-06-12T00:07:00.000Z</published>
    <updated>2023-06-12T00:07:44.614Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;details class=&quot;note info no-icon&quot;&gt;&lt;summary&gt;&lt;p&gt;目录&lt;/p&gt;
&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/2023/03/docker-study-1/&quot; title=&quot;Docker 学习 1.</summary>
        
      
    
    
    
    <category term="Docker 学习" scheme="https://www.tanglijin.top/categories/Docker-%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="Docker" scheme="https://www.tanglijin.top/tags/Docker/"/>
    
  </entry>
  
</feed>
